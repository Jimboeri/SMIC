*******************************************************************************
* LDAREALB - PRINTS LABELS LEADS BY REP AND AREA
* JIM WEST

SELECT 1
IF .NOT. NET_USE('NEWLEADS', .F., 'LD', 'RLEADS')
  RETURN
ENDIF

SELECT 2
IF .NOT. NET_USE('OLDLEADS', .F., 'OLD', 'OLDARC')
  CLOSE DATABASES
  RETURN
ENDIF

SIMHEAD(PSCR_TITLE)

MPSTART = 0
MPEND = 0
MREP = '  '
MDTSTART = CTOD('  /  /  ')
MDTEND = DATE()
MGOOD = ' '
MDATABASE = ' '
@3,10 SAY 'PRINTING LEADS BY POSTAL CODES.'
@5,0 SAY 'Salesman ' GET MREP PICTURE '!!'
@7,0 SAY 'From allocation date ' GET MDTSTART PICTURE '@D'
@8,0 SAY 'To allocation date   ' GET MDTEND PICTURE '@D'
@10,0 SAY 'Start at postal code ' GET MPSTART PICTURE '9999'
@11,0 SAY 'End at postal code   ' GET MPEND PICTURE '9999'
@13,0 SAY 'All leads or just Good leads ' GET MGOOD PICTURE '!'
@5,40 SAY 'Which databases do you want to use ' GET MDATABASE
@7,40 SAY '1 - Current database'
@8,40 SAY '2 - Old leads database'
@9,40 SAY '3 - Both of the above databases'

READ
MVALID = .F.
DO WHILE .NOT. MVALID
  MVALID = .T.
  IF MGOOD <> 'A' .AND. MGOOD <> 'G'
    @23,0 SAY 'Must enter "A"ll or "G"ood'
    @13,0 SAY 'All leads or just Good leads ' GET MGOOD PICTURE '!'
    READ
    MVALID = .F.
    @23,0 CLEAR
  ENDIF
  IF MDATABASE <> '1' .AND. MDATABASE <> '2' .AND. MDATABASE <> '3'
    @23,0 SAY 'Must enter 1, 2 or 3'
    @5,40 SAY 'Which databases do you want to use ' GET MDATABASE
    READ
    MVALID = .F.
    @23,0 CLEAR
  ENDIF
ENDDO

SELECT 1
IF MREP <> '  '
  SEEK MREP
ENDIF

@16,0 SAY 'Load labels into printer and line them up'
WAIT

PRNTOK = .F.
DO WHILE .NOT. PRNTOK
  SET PRINT ON
  SET CONSOL OFF
  ? 'XXXXXXXXXXXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXX'
  ? 'XXXXXXXXXXXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXX'
  ? 'XXXXXXXXXXXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXX'
  ? 'XXXXXXXXXXXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXX'
  ? 'XXXX                                 XXXX'
  ? ' '
  ? ' '
  ? ' '
  ? ' '
  ?? ' '
  SET PRINT OFF
  SET CONSOL ON
  PRN = ' '
  DO WHILE PRN <> 'Y' .AND. PRN <> 'N'
    @18,0 CLEAR
    WAIT 'Are the labels correctly lined up? ' TO PRN
    STORE UPPER(PRN) TO PRN
  ENDDO
  IF PRN = 'Y'
    PRNTOK = .T.
    SET PRINT ON
    ? ' '
    SET PRINT OFF
  ENDIF
ENDDO
SET CONSOL OFF

SET PRINT ON
IF MDATABASE = '1' .OR. MDATABASE = '3'
  DO WHILE (MREP = SALESPSN .OR. MREP = '  ') .AND. .NOT. EOF()
    STORE SPACE(7) TO MARC1
    STORE SPACE(3) TO MSRCE_CD1, MOCC1
    STORE CTOD('  /  /  ') TO MSRCE_DT1
    STORE SPACE(4) TO MTITLE1, MINTLS1, MP_CODE1
    STORE SPACE(30) TO MSUR1
    STORE SPACE(25) TO MADD11, MADD21, MADD31
    STORE SPACE(15) TO MPH_W1, MPH_H1
    STORE SPACE(2) TO MMISC_CD1
    STORE SPACE(7) TO MARC2
    STORE SPACE(3) TO MSRCE_CD2, MOCC2
    STORE CTOD('  /  /  ') TO MSRCE_DT2
    STORE SPACE(4) TO MTITLE2, MINTLS2, MP_CODE2
    STORE SPACE(30) TO MSUR2
    STORE SPACE(25) TO MADD12, MADD22, MADD32
    STORE SPACE(15) TO MPH_W2, MPH_H2
    STORE SPACE(2) TO MMISC_CD2
    MCNT = 1
    DO WHILE MCNT < 3 .AND. (SALESPSN = MREP .OR. MREP = '  ') .AND. .NOT. EOF()
      IF ALLOC_DT >= MDTSTART .AND. ALLOC_DT <= MDTEND
        IF VAL(P_CODE) >= MPSTART .AND. VAL(P_CODE) <= MPEND
          IF KILLED = ' '
            IF MGOOD = 'A' .OR. (SUBSTR(MISC_CD,2,1) = 'G')
              MAREALINE()
            ENDIF
          ENDIF
        ENDIF
      ENDIF
      SKIP
    ENDDO
    IF MARC1 <> SPACE(7)
      ? SPACE(22) + 'SMC ' + MARC1
      IF MARC2 <> SPACE(7)
        ?? SPACE(28) + 'SMC ' + MARC2
      ENDIF
      ? TRIM(MTITLE1) + ' ' + TRIM(MINTLS1) + ' ' + MSUR1
      MCOL = 40 - PCOL()
      ?? REPLICATE(' ',MCOL) + TRIM(MTITLE2) + ' ' + TRIM(MINTLS2) + ' ' + MSUR2
      ? MADD11 + SPACE(15) + MADD12
      ? MADD21 + SPACE(15) + MADD22
      ? MADD31 + SPACE(15) + MADD32
      ? MP_CODE1 + SPACE(36) + MP_CODE2
      ? ' '
      ? ' '
      ? ' '
    ENDIF (ARC <> SPACE)
  ENDDO
ENDIF

SELECT 2
IF MDATABASE = '2' .OR. MDATABASE = '3'
  DO WHILE .NOT. EOF()
    STORE SPACE(7) TO MARC1
    STORE SPACE(3) TO MSRCE_CD1, MOCC1
    STORE CTOD('  /  /  ') TO MSRCE_DT1
    STORE SPACE(4) TO MTITLE1, MINTLS1, MP_CODE1
    STORE SPACE(30) TO MSUR1
    STORE SPACE(25) TO MADD11, MADD21, MADD31
    STORE SPACE(15) TO MPH_W1, MPH_H1
    STORE SPACE(2) TO MMISC_CD1
    STORE SPACE(7) TO MARC2
    STORE SPACE(3) TO MSRCE_CD2, MOCC2
    STORE CTOD('  /  /  ') TO MSRCE_DT2
    STORE SPACE(4) TO MTITLE2, MINTLS2, MP_CODE2
    STORE SPACE(30) TO MSUR2
    STORE SPACE(25) TO MADD12, MADD22, MADD32
    STORE SPACE(15) TO MPH_W2, MPH_H2
    STORE SPACE(2) TO MMISC_CD2
    MCNT = 1
    DO WHILE MCNT < 3 .AND. (SALESPSN = MREP .OR. MREP = '  ') .AND. .NOT. EOF()
      IF RCVD_DT >= MDTSTART .AND. RCVD_DT <= MDTEND
        IF VAL(P_CODE) >= MPSTART .AND. VAL(P_CODE) <= MPEND
          IF (MREP = '  ' .OR. MREP = SALESPSN)
            IF MGOOD = 'A' .OR. (SUBSTR(MISC_CD,2,1) = 'G')
              MAREALINE()
            ENDIF
          ENDIF
        ENDIF
      ENDIF
      SKIP
    ENDDO
    IF MARC1 <> SPACE(7)
      ? SPACE(22) + 'SMC ' + MARC1
      IF MARC2 <> SPACE(7)
        ?? SPACE(28) + 'SMC ' + MARC2
      ENDIF
      ? TRIM(MTITLE1) + ' ' + TRIM(MINTLS1) + ' ' + MSUR1
      MCOL = 40 - PCOL()
      ?? REPLICATE(' ',MCOL) + TRIM(MTITLE2) + ' ' + TRIM(MINTLS2) + ' ' + MSUR2
      ? MADD11 + SPACE(15) + MADD12
      ? MADD21 + SPACE(15) + MADD22
      ? MADD31 + SPACE(15) + MADD32
      ? MP_CODE1 + SPACE(36) + MP_CODE2
      ? ' '
      ? ' '
      ? ' '
    ENDIF (ARC <> SPACE)
  ENDDO
ENDIF


SHUTPRN()
CLOSE DATABASES
RETURN

*EOF

***********************************************************
STATIC PROCEDURE MAREALINE
MM = 'MARC' + LTRIM(STR(MCNT))
STORE ARCHIV TO &MM
MM = 'MTITLE' + LTRIM(STR(MCNT))
STORE TITLE TO &MM
MM = 'MINTLS' + LTRIM(STR(MCNT))
STORE INITLS TO &MM
MM = 'MP_CODE' + LTRIM(STR(MCNT))
STORE P_CODE TO &MM
MM = 'MSUR' + LTRIM(STR(MCNT))
STORE SURNAME TO &MM
MM = 'MADD1' + LTRIM(STR(MCNT))
STORE ADDRESS1 TO &MM
MM = 'MADD2' + LTRIM(STR(MCNT))
STORE ADDRESS2 TO &MM
MM = 'MADD3' + LTRIM(STR(MCNT))
STORE ADDRESS3 TO &MM
MCNT++
RETURN
*EOF
